/*

   Check where we are on the worldmap and overwrite the default desert "resting" map.

   Compatible with vanilla Fo2 and UPU/RPU.

*/

/* Include Files */
#include "define.h"
#include "sfall/sfall.h"
#include "sfall/lib.arrays.h"

procedure start;
procedure Encounter_handler;

#define is_terrain_desert           (get_current_terrain_name == mstr_worldmap(1000))
#define is_terrain_mountains        (get_current_terrain_name == mstr_worldmap(1001))
#define is_terrain_city             (get_current_terrain_name == mstr_worldmap(1002))
#define is_terrain_coast            (get_current_terrain_name == mstr_worldmap(1003))

#define MAP_RND_DESERT_1            (0)
#define MAP_RND_CITY1               (68)
#define MAP_RND_CITY_2              (125)
#define MAP_RND_CITY_3              (141)
#define MAP_RND_CITY_4              (142)
#define MAP_RND_CITY_5              (143)
#define MAP_RND_CITY_6              (144)
#define MAP_RND_CITY_7              (145)
#define MAP_RND_CITY_8              (146)
#define MAP_RND_MOUNTAIN1           (74)
#define MAP_RND_MOUNTAIN2           (75)
#define MAP_RND_MOUNTAIN_3          (121)
#define MAP_RND_COAST1              (76)
#define MAP_RND_COAST2              (77)

#define AREA_RND_DESERT             (26)
#define AREA_RND_MOUNTAIN           (27)
#define AREA_RND_CITY               (28)
#define AREA_RND_COAST              (29)

procedure start begin
   if (game_loaded) then begin
      set_global_script_type(0);
      register_hook_proc(HOOK_ENCOUNTER, Encounter_handler);
   end
end

procedure Encounter_handler begin
   variable
      event := get_sfall_arg,
      mapID := get_sfall_arg,
      Maps_List;

   // If the player enters a map on the worldmap, we set it depending on the current terrain type.
   // event 0 is random encounter, 1 is player initiated "encounter"
   if (event == 1 AndAlso mapID == MAP_RND_DESERT_1) then begin
      if (is_terrain_desert) then begin
         Maps_List := [MAP_RND_DESERT_1];
         if (global_var(GVAR_CAR_PLACED_TILE) < 0) then set_car_current_town(AREA_RND_DESERT);
      end
      else if (is_terrain_mountains) then begin
         Maps_List := [MAP_RND_MOUNTAIN1, MAP_RND_MOUNTAIN2];
         if (global_var(GVAR_CAR_PLACED_TILE) < 0) then set_car_current_town(AREA_RND_MOUNTAIN);
      end
      else if (is_terrain_city) then begin
         Maps_List := [MAP_RND_CITY1, MAP_RND_CITY_2, MAP_RND_CITY_3, MAP_RND_CITY_4, MAP_RND_CITY_5, MAP_RND_CITY_6, MAP_RND_CITY_7, MAP_RND_CITY_8];
         if (global_var(GVAR_CAR_PLACED_TILE) < 0) then set_car_current_town(AREA_RND_CITY);
      end
      else if (is_terrain_coast) then begin
         Maps_List := [MAP_RND_COAST1, MAP_RND_COAST2];
         if (global_var(GVAR_CAR_PLACED_TILE) < 0) then set_car_current_town(AREA_RND_COAST);
      end
      else begin
         Maps_List := [MAP_RND_DESERT_1];
         if (global_var(GVAR_CAR_PLACED_TILE) < 0) then set_car_current_town(AREA_RND_DESERT);
         debug_msg("!!! COULDN'T DETECT TERRAIN TYPE !!!");
      end

      mapID := array_random_value(Maps_List);
      set_sfall_return(mapID);
   end
end
